#!/usr/bin/env bash

set -o errexit

CONFIG_DIR="${HOME}/.daily"
CONFIG_FILE_PATH="${CONFIG_DIR}/config"
KEY_SAVE_DIR="key_save_dir"
KEY_EDITOR="key_editor"

# Arguments
INITIALIZE="initialize"
SET_DIR="set_dir"
SET_EDITOR="set_editor"

# Usable editors
editors=("vim" "nvim" "nano" "code")

# ------------------------------
# Functions related to open file
# ------------------------------

function start_edit() {
    local save_dir=$(get_save_dir)
    local file_path="${save_dir}/$(date +"%Y%m%d").md"

    validate_save_dir ${save_dir}

    make_file_if_not_exist ${file_path}

    # Open file
    # If EDITOR is not set, vim is used as the default editor
    local editor=$(get_editor)
    ${editor:-vim} ${file_path}
}

function get_save_dir() {
  # Get the save directory from config file
  echo $(cat ${CONFIG_FILE_PATH} | grep ${KEY_SAVE_DIR} | cut -d'=' -f2)
}

function validate_save_dir() {
    if [ -z $1 ] || [ ! -d $1 ] ; then
      echo "Please set the save directory."
      exit 1
    fi
}

function make_file_if_not_exist() {
  if [ ! -e $1 ]; then
    touch $1
  fi
}

function get_editor() {
  # Get the editor from config file
  echo $(cat ${CONFIG_FILE_PATH} | grep ${KEY_EDITOR} | cut -d'=' -f2)
}

# ------------------------------
# Functions related to set save directory
# ------------------------------

function set_save_dir_if_valid() {
  if [ $# -eq 0 ]; then
    echo "Please enter the directory path."
    exit 1
  elif [ ! -d $1 ]; then
    echo "Invalid directory path. Please enter the exsiting directory path."
    exit 1
  else
    set_save_dir $1
  fi
}

function set_save_dir() {
  # Set the save directory in config file
  sed -i '' "s|^${KEY_SAVE_DIR}=.*|${KEY_SAVE_DIR}=$1|" "${CONFIG_FILE_PATH}"
}

# ------------------------------
# Functions related to set editor
# Could not use shell variable in sub shell,
# so I made two functions to set editor.
# ------------------------------

function set_editor_if_valid() {
  if [ $# -eq 0 ]; then
    echo "Please enter the editor."
    exit 1
  elif [[ ! ${editors[*]} =~ $1 ]]; then
    echo "Invalid editor. Please enter the valid editor."
    exit 1
  else
    set_editor $1
  fi
}

function set_editor() {
  # Set the editor in config file
  sed -i '' "s|^${KEY_EDITOR}=.*|${KEY_EDITOR}=$1|" "${CONFIG_FILE_PATH}"
}

# ------------------------------
# Functions related to initialize
# ------------------------------

function make_config_file() {
  # Make config file in /.daily
  if [ ! -e ${CONFIG_FILE_PATH} ]; then
    mkdir ${CONFIG_DIR}
    touch "${CONFIG_FILE_PATH}"
    echo "${KEY_SAVE_DIR}=" >> "${CONFIG_FILE_PATH}"
    echo "${KEY_EDITOR}=" >> "${CONFIG_FILE_PATH}"
  else
    echo "Already initialized. ${CONFIG_FILE_PATH} exists."
  fi
}

# ------------------------------

if [ $# -eq 0 ]; then
   start_edit
elif [ "$1" = ${INITIALIZE} ]; then
    make_config_file
elif [ "$1" = ${SET_DIR} ]; then
    set_save_dir_if_valid $2
elif [ "$1" = ${SET_EDITOR} ]; then
    set_editor_if_valid $2
else
    echo "Invalid argument"
    exit 1
fi

